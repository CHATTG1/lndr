# lndr addresses
lndr-ucacs {
    usd = "0x7899b83071d9704af0b132859a04bb1698a3acaf"
    jpy  = "0x9d9462f70067f506ac26bd523222f4f8020924d4"
    krw = "0x9945a5b005a898a435adf30fe88f2818ccc0ba5c"
}

# Credit Protocol contract address, called for 'issueCredit' among others
credit-protocol-address = "0xd5ec73eac35fc9dd6c3f440bce314779fed09f60"

# the signature of the issue credit event, used when scanning logs
issue-credit-event = "0xcbc85a9af1e8adce13cbeff2e71299b0f3243d7ef1eaec93a9a281e939aceb7b"

# on startup, the server scans the blockchain for cp records. If any records
# are missing from the db, rows are added so that user balances are properly
# displayed. 'scanStartBlock' defines where the scan should begin; setting the
# value equal to the block in which CP was created is a logical choice.
scan-start-block = 0

# postgres config
db {
    host = "localhost"
    port = 5432
    user = "test"
    user-password = "test"
    name = "lndrtest"
}

# configuration used for calling CP's 'issueCredit' function
execution-address = "0x198e13017d2333712bd942d8b028610b95c363da"
gas-price = 200000000
max-gas = 250000

# urban airship credentials used for push notifications
urban-airship {
    key = "4_88888888888mmmmmmmmm"
    secret = "rrrrrrrrrrrrrrrrrrrrrr"
}

# how often to run the heartbeat function in seconds. The heartbeat is
# responsible for confirming settlement transactions.
heartbeat-interval = 3

# aws config and credentials
aws {
    photo-bucket = "lndr-avatars"
    access-key-id = "AAAAAAAAAAAAAAAAAAAA"
    secret-access-key= "6444444444444444444444444444444444444444"
}

# ethereum node config
web3-url = "http://localhost:8545"
